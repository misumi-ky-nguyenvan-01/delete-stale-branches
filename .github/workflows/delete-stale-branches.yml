name: Delete stale branches (All fetched first)
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  delete-stale-branches:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo
            const diffOfDate = 90

            let branchesToDelete = []
            let patternStats = {}

            // GraphQL patterns: feature/, test/, release/
            const graphqlPatterns = [
              { prefix: 'feature/', requireClosedPR: true },
              { prefix: 'test/', requireClosedPR: false },
              { prefix: 'release/', requireClosedPR: false }
            ]

            console.log('🔍 Bắt đầu kiểm tra các pattern branches...')

            for (const pattern of graphqlPatterns) {
              const query = `{
                repository(owner: "${owner}", name: "${repo}") {
                  refs(refPrefix: "refs/heads/${pattern.prefix}", first: 50) {
                    nodes {
                      name
                      target { ... on Commit { committedDate } }
                    }
                  }
                }
              }`

              const result = await github.graphql(query)
              const branches = result.repository.refs.nodes.map(b => ({
                name: `${pattern.prefix}${b.name}`,
                lastCommitDate: new Date(b.target.committedDate),
                requireClosedPR: pattern.requireClosedPR,
                pattern: pattern.prefix
              }))
              
              patternStats[pattern.prefix] = branches.length
              console.log(`📊 Pattern "${pattern.prefix}": Tìm thấy ${branches.length} branches`)
              
              branchesToDelete.push(...branches)
            }

            // REST API pattern revert-
            const { data: allBranches } = await github.rest.repos.listBranches({
              owner, repo, per_page: 100
            })

            const revertBranches = allBranches
              .filter(b => b.name.startsWith('revert-'))
              .slice(0, 50)

            patternStats['revert-'] = revertBranches.length
            console.log(`📊 Pattern "revert-": Tìm thấy ${revertBranches.length} branches`)

            for (const b of revertBranches) {
              const { data: branchDetail } = await github.rest.repos.getBranch({
                owner, repo, branch: b.name
              })

              branchesToDelete.push({
                name: b.name,
                lastCommitDate: new Date(branchDetail.commit.commit.committer.date),
                requireClosedPR: true,
                pattern: 'revert-'
              })
            }

            console.log('================================')
            let totalBranches = 0
            for (const [pattern, count] of Object.entries(patternStats)) {
              console.log(`${pattern.padEnd(12)}: ${count} branches`)
              totalBranches += count
            }
            console.log('================================')
            console.log(`TOTAL    : ${totalBranches} branches`)
            console.log('================================\n')
