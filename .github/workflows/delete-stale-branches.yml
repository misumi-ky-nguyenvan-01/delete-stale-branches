name: Delete stale branches (Improved)
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  delete-stale-branches:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo
            const cutoffDate = new Date(Date.now() - 90 * 24 * 60 * 60 * 1000) // 90 days ago
            
            // Branch patterns to check (without refs/heads/ prefix)
            const branchPatterns = [
              'feature/',
              'test/', 
              'release/',
              'revert-'
            ]
            
            async function getAllBranches() {
              let allBranches = []
              let page = 1
              let hasMore = true
              
              while (hasMore) {
                try {
                  console.log(`üìÑ Fetching branches page ${page}...`)
                  const { data: branches } = await github.rest.repos.listBranches({
                    owner,
                    repo,
                    per_page: 100,
                    page: page
                  })
                  
                  if (branches.length === 0) {
                    hasMore = false
                  } else {
                    allBranches.push(...branches)
                    page++
                  }
                } catch (error) {
                  console.log(`‚ùå Error fetching branches page ${page}: ${error.message}`)
                  hasMore = false
                }
              }
              
              return allBranches
            }
            
            console.log('üîç Starting branch cleanup process...')
            console.log(`üìÖ Cutoff date: ${cutoffDate.toISOString()} (90 days ago)`)
            
            const allBranches = await getAllBranches()
            console.log(`üìä Found ${allBranches.length} total branches`)
            
            // Filter branches by patterns
            const branchesToCheck = allBranches.filter(branch => {
              const matchesPattern = branchPatterns.some(pattern => branch.name.startsWith(pattern))
              if (matchesPattern) {
                console.log(`üéØ Branch matches pattern: ${branch.name}`)
              }
              return matchesPattern
            })
            
            console.log(`üîç Found ${branchesToCheck.length} branches matching patterns`)
            
            let totalDeleted = 0
            let totalChecked = 0
            let skipped = 0
            
            for (const branch of branchesToCheck) {
              totalChecked++
              console.log(`\n[${totalChecked}/${branchesToCheck.length}] üîç Checking: ${branch.name}`)
              
              try {
                // Get detailed branch info including commit date
                const { data: branchDetail } = await github.rest.repos.getBranch({
                  owner,
                  repo,
                  branch: branch.name
                })
                
                const lastCommitDate = new Date(branchDetail.commit.commit.committer.date)
                const daysSinceLastCommit = Math.floor((Date.now() - lastCommitDate.getTime()) / (1000 * 60 * 60 * 24))
                
                console.log(`üìÖ Last commit: ${lastCommitDate.toISOString()} (${daysSinceLastCommit} days ago)`)
                
                if (lastCommitDate < cutoffDate) {
                  console.log(`üóëÔ∏è  Branch is stale, attempting to delete...`)
                  try {
                    await github.rest.git.deleteRef({ 
                      owner, 
                      repo, 
                      ref: `heads/${branch.name}` 
                    })
                    console.log(`‚úÖ Successfully deleted: ${branch.name}`)
                    totalDeleted++
                  } catch (deleteError) {
                    console.log(`‚ùå Failed to delete ${branch.name}: ${deleteError.message}`)
                  }
                } else {
                  console.log(`‚è≠Ô∏è  Keeping ${branch.name} (not stale)`)
                  skipped++
                }
                
              } catch (error) {
                console.log(`‚ö†Ô∏è  Could not get branch details for ${branch.name}: ${error.message}`)
                skipped++
              }
            }
            
            console.log(`\nüéâ Branch cleanup completed!`)
            console.log(`üìä Summary:`)
            console.log(`   ‚Ä¢ Total checked: ${totalChecked}`)
            console.log(`   ‚Ä¢ Successfully deleted: ${totalDeleted}`)
            console.log(`   ‚Ä¢ Skipped/kept: ${skipped}`)
            console.log(`   ‚Ä¢ Failure rate: ${totalChecked > 0 ? Math.round((skipped / totalChecked) * 100) : 0}%`)
