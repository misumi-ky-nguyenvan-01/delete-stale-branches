name: Delete stale branches (All fetched first)
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  delete-stale-branches:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo
            const diffOfDate = 90

            let branchesToDelete = []

            // GraphQL patterns: feature/, test/, release/
            const graphqlPatterns = [
              { prefix: 'feature/', requireClosedPR: true },
              { prefix: 'test/', requireClosedPR: false },
              { prefix: 'release/', requireClosedPR: false },
              { prefix: 'revert-', requireClosedPR: true }
            ]

            for (const pattern of graphqlPatterns) {
              isRevert = pattern.prefix === 'revert-'
              const refPrefix = isRevert ? 'refs/heads/' : `refs/heads/${pattern.prefix}`

              const query = `{
                repository(owner: "${owner}", name: "${repo}") {
                  refs(refPrefix: "${refPrefix}", first: 100) {
                    nodes {
                      name
                      target { ... on Commit { committedDate } }
                    }
                  }
                }
              }`

              const result = await github.graphql(query)
              let branches = result.repository.refs.nodes
              if (isRevert) {
                branches = branches.filter(branch => branch.name.startsWith('revert-'))
              }

              const mappedBranches = branches.map(branch => ({
                name: `${pattern.prefix}${branch.name}`,
                lastCommitDate: new Date(branch.target.committedDate),
                requireClosedPR: pattern.requireClosedPR
              }))

              branchesToDelete.push(...mappedBranches)
              console.log(`ðŸ“Š Pattern "${pattern.prefix}": ${mappedBranches.length} branches`)
              console.log(`First branch: ${mappedBranches[0]?.name || 'N/A'}`)
            }

            console.log(`Total branches fetched: ${branchesToDelete.length}`)

